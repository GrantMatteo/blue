$PortToApp = Get-NetTCPConnection | Select-Object -Property LocalPort,@{name='ProcessName';expression={(Get-Process -Id $_.OwningProcess). Path}},CreationTime

$PortTable = @{}

$PortToApp | ForEach-Object {$PortTable.Add($_.LocalPort, $_.ProcessName)}

netsh advfirewall firewall delete rule all

netsh advfirewall set allprofiles logging filename %systemroot%\System32\LogFiles\Firewall\pfirewall.log
netsh advfirewall set allprofiles logging maxfilesize 16384
netsh advfirewall set allprofiles logging droppedconnections enable
netsh advfirewall set allprofiles logging allowedconnections enable

netsh advfirewall set allprofiles state on
netsh advfirewall set allprofiles firewallpolicy blockinbound

netsh a s a state off

netsh a s a state on

#Start-Sleep -Seconds 30

$LogIn = Get-Content "$Env:SystemRoot\System32\LogFiles\Firewall\pfirewall.log" | Select-String -Pattern "DROP TCP" | Select-String -Pattern "RECEIVE"

for ($i = 0; $i -lt $LogIn.Length; $i++) {$LogIn[$i] = $LogIn[$i].ToString().Split(" ")[5] + ":" + $LogIn[$i].ToString().Split(" ")[7]}

$SocketsIn = $LogIn | Select-Object -Unique

$SocketsIn | ForEach-Object {
    if($PortTable[[uint16] $_.split(":")[1]] -eq $NULL) {
        netsh advfirewall firewall add rule name= "$_" dir=in action=allow protocol=TCP localport= $_.split(":")[1] enable=yes
    } else {
        $Program = $_.split(":")[1];
        $Program = ($PortTable.GetEnumerator() | Where-Object key -eq $Program | Select-Object -expand Value)
        netsh advfirewall firewall add rule name= "$_" program= $Program dir=in action=allow protocol=TCP localport= $_.split(":")[1] enable=yes
        # New-NetFirewallRule -DisplayName "$_" -Name "$_" -Program ($PortTable.GetEnumerator() | Where-Object key -eq $Program | Select-Object -expand Value) -Direction Inbound -Action Allow -LocalPort $_.split(":")[1] -Protocol TCP -Enabled True -Profile Any}
    }
}
